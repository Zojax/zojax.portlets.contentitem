===================
Content Item portlet
===================

    >>> from zope import component, interface, event
    >>> from zope.lifecycleevent import ObjectModifiedEvent
    >>> from zope.testbrowser.testing import Browser
    >>> from zope.app.intid import IntIds
    >>> from zope.app.intid.interfaces import IIntIds
    >>> from zope.app.testing.functional import getRootFolder
    >>> from zope.app.component.hooks import setSite
    >>> from zojax.catalog.catalog import ICatalog, Catalog
    >>> from zojax.extensions.interfaces import IExtensible
    >>> from zojax.content.type.interfaces import IContentContainer
    >>> from zojax.portlets.contentitem.tests.tests import TestContent

    >>> root = getRootFolder()
    >>> setSite(root)
    >>> interface.alsoProvides(root, IExtensible, IContentContainer)
    >>> sm = root.getSiteManager()
    >>> root['ids'] = IntIds()
    >>> sm.registerUtility(root['ids'], IIntIds)
    >>> root['catalog'] = Catalog()
    >>> sm.registerUtility(root['catalog'], ICatalog)

    >>> content = TestContent(title=u'Test content')
    >>> content.text = u'Test content body text.'
    >>> root['content'] = content

change portlet settings

    >>> actor = Browser()
    >>> actor.handleErrors = False
    >>> actor.addHeader("Authorization", "Basic mgr:mgrpw")
    >>> actor.open("http://localhost/++extensions++/")
    >>> actor.getLink('Portlets').click()

set portlets manager

    >>> actor.getLink('Left column portlets').click()
    >>> actor.open('http://localhost/++extensions++/portlets/columns.left/?form.widgets.portletIds:list=portlet.contentitem&form.buttons.save=Save&form.widgets.status=1')

setup portlet

    >>> actor.open('http://localhost/++extensions++/portlets/columns.left/')
    >>> actor.getLink('Content Item').click()

We have no options in select cause no content marked as possible to be selected
    >>> actor.getControl(name="form.widgets.item:list").options
    []

So we enable content for portlet

    >>> actor.open('http://localhost/content/context.html/presentation')
    >>> actor.getControl(name="portlet.contentitem.widgets.enabled:list").value = ['true']
    >>> actor.getControl(name="portlet.contentitem.buttons.save").click()

We setup portlet again
    >>> actor.open('http://localhost/++extensions++/portlets/columns.left/')
    >>> actor.getLink('Content Item').click()

Now we have options in select cause no content marked as possible to be selected
    >>> actor.getControl(name="form.widgets.item:list").displayOptions
    ['Test content (content)']
    >>> actor.getControl(name="form.widgets.item:list").displayValue = ['Test content (content)']
    >>> actor.getControl(name="form.buttons.save").click()

check portlet

    >>> user = Browser()
    >>> user.handleErrors = False
    >>> user.addHeader("Authorization", "Basic mgr:mgrpw")
    >>> user.open("http://localhost/test.html")
    >>> print user.contents
    <html>
    ...
      <td><div class="z-portlet portlet-contentitem">
      <h2 class="z-portlet-header">Test content</h2>
      <div class="z-portlet-body">
        <div class="z-portlet-item"><div><div class="z-test-content">Test content body text.</div></div></div>
      </div>
    </div></td>
    ...
    </html>


set content portlets manager

    >>> actor.open("http://localhost/++extensions++/")
    >>> actor.getLink('Portlets').click()
    >>> actor.getLink('Content column portlets').click()
    >>> actor.open('http://localhost/++extensions++/portlets/columns.content/?form.widgets.portletIds:list=portlet.contentitem&form.buttons.save=Save&form.widgets.status=1')

setup portlet

    >>> actor.open('http://localhost/++extensions++/portlets/columns.content/')
    >>> actor.getLink('Content Item').click()
    >>> actor.getControl(name="form.widgets.item:list").displayValue = ['Test content (content)']
    >>> actor.getControl(name="form.buttons.save").click()

check portlet

    >>> user = Browser()
    >>> user.handleErrors = False
    >>> user.addHeader("Authorization", "Basic mgr:mgrpw")
    >>> user.open("http://localhost/test2.html")
    >>> print user.contents
    <html>
    ...
      <td><div id="z-portal-workspace"><div id="z-portal-viewspace"><div id="z-content"><div class="z-portlet portlet-contentitem">
      <h2 class="z-portlet-header">Test content</h2>
      <div class="z-portlet-body">
        <div class="z-portlet-item"><div><div class="z-test-content">Test content body text.</div></div></div>
        </div>
      </div>/div>
    </div></div></div></td>
    ...
    </html>


No decoration

    >>> actor.getControl(name="form.widgets.decoration:list").value = ['false']
    >>> actor.getControl(name="form.buttons.save").click()

    >>> user.open("http://localhost/test2.html")
    >>> print user.contents
    <html>
    ...
    <td><div id="z-portal-workspace"><div id="z-portal-viewspace"><div id="z-content">/div>
    <div class="context-actions">
      <ul>
        <li><a title="Edit" href="http://localhost/content/context.html">
      <img src="http://localhost/@@/zojax-content-actions-interfaces-IEditContentContextAction-zmi_icon.gif" alt="EditContentContextAction" width="16" height="16" border="0" />
    </a></li>
      </ul>
    </div><h1 class="z-content-title">Test content</h1><div class="z-content-body"><div><div class="z-test-content">Test content body text.</div></div></div>
      <br /><br />
    </div></div></div></td>
    ...
    </html>
